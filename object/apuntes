### NODOS DE ALMACENAMIENTO ###
### TODOS ###
En los nodos de almacenamiento:

Prerequisitos
1. Se instalan los paquetes y utilerias de soporte
$ apt-get install xfsprogs rsync

2. Se le da formato a los discos que no son de sistema
$ mkfs.xfs /dev/sdb
$ mkfs.xfs /dev/sdc

3. Se crean  los puntos de montaje para los discos
$ mkdir -p /srv/node/sdb
$ mkdir -p /srv/node/sdc

4. Se montan los discos
$ mount /srv/node/sdb
$ mount /srv/node/sdc

5. Crear o editar el archivo /etc/rsyncd.conf con el siguiente contenido
uid = swift
gid = swift
log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = MANAGEMENT_INTERFACE_IP_ADDRESS

[account]
max connection = 2
path = /srv/node/
read only = false
lock file = /var/lock/account.lock

[container]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/container.lock

[object]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/object.lock

En los nodos de almacenamiento

6. Editar el archivo /etc/default/rsync
RSYNC_ENABLE = true

7. Iniciar el servicio rsync
service rsync start

En los nodos de almacenamiento

1. Instalar los componentes
apt-get install swift swift-account swift-container swift-object

2.Descargar las configuraciones desde el repositorio de swift
$ curl -o /etc/swift/account-server.conf https://git.openstack.org/cgit/openstack/swift/plain/etc/account-server.conf-sample?h=stable/ocata
$ curl -o /etc/swift/container-server.conf https://git.openstack.org/cgit/openstack/swift/plain/etc/container-server.conf-sample?h=stable/ocata
$ curl -o /etc/swift/object-server.conf https://git.openstack.org/cgit/openstack/swift/plain/etc/object-server.conf-sample?h=stable/ocata

3. Editar el archivo /etc/swift/account-server.conf
[DEFAULT]
bind_ip = MANAGEMENT_INTERFACE_IP_ADDRESS
bind_port = 6002
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = true

[pipeline:main]
pipeline = healthcheck recon account-server

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift

4. Editar el archivo /etc/swift/container-server.conf
[DEFAULT]
bind_ip = MANAGEMENT_INTERFACE_IP_ADDRESS
bind_port = 6001
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = true

[pipeline:main]
pipeline = healthcheck recon container-server

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift

5. Editar el archivo /etc/swift/object-server.conf
[DEFAULT]
bind_ip = MANAGEMENT_INTERFACE_IP_ADDRESS
bind_port = 6000
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = true

[pipeline:main]
pipeline = healthcheck recon object-server

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
recon_lock_path = /var/lock

6. Cambiar los permisos al directorio /srv/node
$ chown -R swift:swift /srv/node

7. Crear el directorio recon y asegurar que tiene los permisos correctos.
$ mkdir -p /var/cache/swift
$ chown -R root:swift /var/cache/swift
$ chmod -R 755 /var/cache/swift

### CONTROLADOR ###
De regreso en el nodo controlador
Crear y distribuir los anillos iniciales

1. Cambiar el directorio de trabajo a /etc/swift

2. Crear el archivo base account.builder:
$ swift-ring-builder account.builder create 10 3 1

10 = cantidad de particiones
3 = numero de replicas
1 = tiempo entre replicas

3. Agregar los nodos al anillo
$ swift-ring-builder account.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6002 --device sdb --weight 100
$ swift-ring-builder account.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6002 --device sdc --weight 100
$ swift-ring-builder account.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6002 --device sdb --weight 100
$ swift-ring-builder account.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6002 --device sdc --weight 100

Crear y distribuir los anillos iniciales
4.
swift-ring-builder account.builder

5.
swift-ring-builder account.builder rebalance

### Repetir desde el punto 2 para container y object decrementando los el puerto

6. Crear el archivo base container.builder
$ swift-ring builder container.builder create 10 3 1

7. Agregar los nodos al anillo
$ swift-ring-builder container.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6001 --device sdb --weight 100
$ swift-ring-builder container.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6001 --device sdc --weight 100
$ swift-ring-builder container.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6001 --device sdb --weight 100
$ swift-ring-builder container.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6001 --device sdc --weight 100

8.
swift-ring-builder account.builder rebalance

9. Crear el archivo base container.builder
$ swift-ring builder container.builder create 10 3 1

10.
$ swift-ring builder object.builder create 10 3 1

11.
$ swift-ring-builder object.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6001 --device sdb --weight 100
$ swift-ring-builder object.builder add --region 1 --zone 1 --ip 10.0.0.51 --port 6001 --device sdc --weight 100
$ swift-ring-builder object.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6001 --device sdb --weight 100
$ swift-ring-builder object.builder add --region 1 --zone 2 --ip 10.0.0.52 --port 6001 --device sdc --weight 100

12. Verificar el contenido del anillo
$ swift-ring-builder object.builder

13. Se rebalancea el anillo
$ swift-ring-builder object.builder rebalance

14. Distribuir los archivos account.ring.gz, container.ring.gz y object.ring.gz
en el directorio /etc/swift de los nodos de almacenamiento de objetos.

#### 5. Instalación y administración del almacenamiento de objetos.
##### Componentes del servicio

    -- Proxy servers
    -- Anillos
    -- Zonas
    -- Cuentas y contenedores
    -- Objetos
    -- Particiones

#### NODO CONTROLADOR ####
Finalizar la instalación
15. Obtener el archivo de configuración de swift
$ curl -o /etc/swift/swift.conf https://git.openstack.org/cgit/openstack/swift/plain/etc/swift.conf-sample?h=stable/ocata

16. Editar el archivo swift.conf
[swift-hash]
swift_hash_path_suffix = HASH_PATH_SUFFIX
swift_hash_path_prefix = HASH_PATH_PREFIX

[storage-policy:0]
name = Policy-0
default = yes

17. Copiar el archivo de configuración swift.conf a todos los nodos en la misma ubicación
/etc/swift/swift.conf

18. En todos los nodos asegurarse de que /etc/swift tiene los permisos correctos
$ chown -R root:swift /etc/swift

19. En el controlador reinicar los servicios memcached y swift proxy
$ service memcached restart
$ service swift-proxy restart

20. En los nodos de almacenamiento iniciar el servicio de swift
$ swift-init all start

### NODO CONTROLADOR ###

21. Cargar las variables de ambiente para adminsitrador
22. Mostrar el estado del servicio
$ swift stat

23. Crear un contenedor
$ openstack container create container1

24. Almacenar un archivo de prueba en el contenedor
$ openstack object create container1 FILE

25. Listar los objetos almacenados en container 1
$ openstack object list container 1

26. Descargar el archivo desde el contenedor
$ openstack object save container1 FILE

### Administración de anillos
Listar el contenido de un archivo de definición de anillo
$ swift-ring-builder <nombre del archivo de anillo>

Agregar un nodo a un anillo
$ swift-ring-builder <nombre del archivo de anillo> add --region <región> --zone <zona> --ip <dirección ip> --port <puerto> --device <dispositivo> --weight <peso>

Crear anillo
$ swift-ring-builder create <nombre del archivo de anillo> <capacidad de particiones> <replicas> <horas>

Crear contenedores
$ openstack container create <nombre del contenedor>

Eliminar contenedor
$ openstack container delete [--recursive] <container> [<container> ...]

Listar contenedores
openstack  container list [--long] [--all]

Hacer una copia local del contenedor
$ openstack container save <nombre del contenedor>


### Administración de objetos
Crear objetos
$ openstack object create [--name <nombre>] <contenedor> <archivo>

Eliminar objetos
$ openstack object delete <contenedor> <objeto>

Listar objetos
$ openstack object list [--long] [-all] <contenedor>

Hacer una copia local del objeto
$ openstack object save [--file <archivo>] <contenedor> <objeto>
